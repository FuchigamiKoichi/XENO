name: Deploy to Staging (dev.shigenoki.com)

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

concurrency:
  group: staging-deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      # 画像名（常に小文字）
      - name: Compute lowercase image name
        run: echo "IMAGE=ghcr.io/${GITHUB_REPOSITORY,,}" >> "$GITHUB_ENV"

      # Secret が空だと即わかるように
      - name: Sanity check GHCR_PAT
        run: |
          [ -n "${{ secrets.GHCR_PAT }}" ] || { echo "::error ::GHCR_PAT is empty (Repo → Settings → Secrets → Actions に write:packages の PAT を作成してください)"; exit 1; }

      # ★ GHCR に PAT でログイン（まずは確実に通す）
      - name: Log in to GHCR (with PAT)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      # ❶ スモーク：busybox を :main に再タグして push（GHCR 側の受け入れ確認）
      - name: Smoke push to package (:main)
        run: |
          set -euxo pipefail
          docker pull busybox:latest
          docker tag busybox:latest "${IMAGE}:main"
          docker push "${IMAGE}:main"

      # ❷ 本番ビルド → :main / :<sha> を push
      - name: Build & Push real image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:main
            ${{ env.IMAGE }}:${{ github.sha }}
          provenance: false

      # ❸ :main の存在を検証（ここまで来れば Pull してOK）
      - name: Verify :main tag exists on GHCR
        run: docker buildx imagetools inspect "${IMAGE}:main" >/dev/null

      # ❹ サーバ反映
      - name: Pull & Restart via Compose
        run: |
          cd /srv/dev
          docker compose pull app
          docker compose up -d
          docker image prune -f